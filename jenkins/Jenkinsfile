node {
    def MVN_HOME

    stage('Initialization') {
        // Set up Maven
        tool 'maven'
        MVN_HOME = tool 'maven'
    }

    stage('Build') {
        // Set your Maven goals and options
        def mavenCmd = "${MVN_HOME}/bin/mvn"
        def mavenOptions = '-B -Dmaven.test.failure.ignore=true'

        // Build the Maven project
        sh "${mavenCmd} ${mavenOptions} clean install"

        // Extract version from the project
        def version = sh(script: "${mavenCmd} -q org.codehaus.mojo:build-helper-maven-plugin:3.0:parse-version", returnStdout: true).trim()
        echo "Current Version: ${version}"

        // Increment the version (you might need to implement your own logic here)
        def incrementedVersion = incrementVersion(version)
        echo "New Version: ${incrementedVersion}"

        // Update the POM file with the new version
        sh "${mavenCmd} versions:set -DnewVersion=${incrementedVersion}"
    }

    stage('Deploy') {
        // Set your Maven goals and options
        def mavenCmd = "${MVN_HOME}/bin/mvn"
        def mavenOptions = '-B -Dmaven.test.failure.ignore=true'

        // Deploy your Maven artifacts
        sh "${mavenCmd} ${mavenOptions} deploy"
    }
}

// Function to increment version (customize this according to your needs)
def incrementVersion(currentVersion) {
    // Example: incrementing the patch version
    def (major, minor, patch) = currentVersion.split("\\.")
    patch = patch.toInteger() + 1
    return "${major}.${minor}.${patch}"
}
